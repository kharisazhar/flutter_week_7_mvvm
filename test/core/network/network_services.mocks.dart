// Mocks generated by Mockito 5.4.0 from annotations
// in flutter_week7_mvvm/test/core/network/network_services.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_week7_mvvm/core/network/network_services.dart' as _i3;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkServices extends _i1.Mock implements _i3.NetworkServices {
  MockNetworkServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: '',
      ) as String);
  @override
  Map<String, String> get header => (super.noSuchMethod(
        Invocation.getter(#header),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  _i4.Future<_i2.Response> get({required String? endpoint}) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {#endpoint: endpoint},
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [],
            {#endpoint: endpoint},
          ),
        )),
      ) as _i4.Future<_i2.Response>);
}
